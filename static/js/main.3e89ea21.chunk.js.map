{"version":3,"sources":["components/card/card.component.jsx","components/card_list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAY,iBAAjB,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHTC,G,MAAW,SAACR,GAAD,OAEnB,qBAAKC,UAAW,YAAhB,SAEGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAwBA,QAAWA,GAAvBA,EAAQC,WCN7CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACtB,uBAAOZ,UAAY,SAASa,KAAO,SAASF,YAAeA,EAC3DG,SAAYF,MCgDDG,G,wDA9Cb,aACC,IAAD,8BACE,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALjB,E,qDAQA,WACC,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAWkB,S,oBAS3C,WACEC,QAAQC,IAAI,QADN,MAE2BC,KAAKR,MAA/Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACXY,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAGlD,OAEE,sBAAKhC,UAAU,MAAf,UACA,oDACE,cAAC,EAAD,CACAW,YAAc,kBACdC,aAAgBiB,KAAKjB,eAGrB,cAAC,EAAD,CAAUJ,SAAYsB,W,GAvCZI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e89ea21.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    \r\n    <div className = 'card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\n\r\nexport const CardList = (props) => (\r\n    \r\n     <div className ='card-list'>\r\n    {\r\n        props.monsters.map(monster => (<Card key ={monster.id} monster = {monster}/>))\r\n    }\r\n    </div>\r\n);"," import React from 'react';\r\n import './search-box.styles.css';\r\n\r\n export const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className = 'search' type = 'search' placeholder = {placeholder} \r\n    onChange = {handleChange} />\r\n );","\nimport {React, Component } from 'react';\nimport { CardList } from './components/card_list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor()\n  {\n    super();\n    \n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField : e.target.value});\n  }\n\n  \n \n  render(){\n    console.log('////');\n    const {monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    // const filteredMonsters = this.state.monsters.filter(monster =>\n    //   monster.name.toLowerCase().includes(this.state.searchField.toLowerCase()))\n    return (\n      \n      <div className=\"App\">\n      <h1> Monsters Rolodex </h1>\n        <SearchBox\n        placeholder = 'search monsters'\n        handleChange = {this.handleChange}\n        />\n        \n        <CardList monsters = {filteredMonsters}/>\n          \n     \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}